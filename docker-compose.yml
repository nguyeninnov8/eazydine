version: '3.8'

services:
  #keycloak service
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.3
    container_name: keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
      - KC_HEALTH_ENABLED=true
      - KC_METRICS_ENABLED=true
    ports:
      - "8180:8080"
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: /bin/bash -c
    command:
      - |
        echo "Installing curl..."
        microdnf update -y && microdnf install -y curl
        echo "Starting Keycloak..."
        /opt/keycloak/bin/kc.sh start-dev
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 30s
  # PostgreSQL database for Keycloak
  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - microservices-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U keycloak" ]
      interval: 5s
      timeout: 5s
      retries: 5

  # Auth service
  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    container_name: auth-service
    environment:
      - KEYCLOAK_ADMIN_USERNAME=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - SPRING_PROFILES_ACTIVE=docker
      - KEYCLOAK_AUTH_SERVER_URL=http://keycloak:8080  # Using internal port
      - KEYCLOAK_REALM=microservices-realm
      - KEYCLOAK_RESOURCE=auth-service
      - KEYCLOAK_CREDENTIALS_SECRET=VwyD2iOCizsMn4984BeTA6oiDRQMz116
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://keycloak:8080/realms/microservices-realm
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://keycloak:8080/realms/microservices-realm/protocol/openid-connect/certs
    ports:
      - "8081:8081"
    depends_on:
      keycloak:
        condition: service_healthy
    networks:
      - microservices-network
networks:
  microservices-network:
    driver: bridge

volumes:
  postgres-data: